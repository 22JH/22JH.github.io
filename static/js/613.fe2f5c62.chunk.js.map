{"version":3,"file":"static/js/613.fe2f5c62.chunk.js","mappings":"2NACA,EAAuB,mCAAvB,EAAiE,mCAAjE,EAA4G,oCAA5G,EAAwJ,oCAAxJ,EAAmM,mCAAnM,EAA6O,mCAA7O,EAAoX,kC,gECMpX,SAASA,EAAqB,GAM1B,IALFC,EAAQ,EAARA,SACAC,EAAK,EAALA,MACAC,EAAS,EAATA,UACAC,EAAiB,EAAjBA,kBACAC,EAAgB,EAAhBA,iBAEA,GAA4BC,EAAAA,EAAAA,UAASC,MAAMJ,EAAUK,QAAQC,MAAK,IAAO,eAAlEC,EAAM,KAAEC,EAAS,KAClBC,GAAMC,EAAAA,EAAAA,MAEZ,OACE,iCACE,SAAC,KAAS,CACRZ,SAAUA,EAASa,OACnBC,MAAO,CACLC,IAAKC,EACLC,KAAM,CACJC,MAAO,GACPC,OAAQ,IAEVC,QAAS,CACPC,OAAQ,CACNC,EAAG,KACHC,EAAG,MAITC,QAAS,SAACC,GACRrB,GAAiB,GACjBO,EAAIe,MAAMD,EAAOE,eACjBjB,GAAU,SAACD,GAET,OADAA,EAAOR,IAAS,GACT,OAAIQ,EACb,IACAN,EAAkBH,EACpB,IAEDS,EAAOR,KACN,UAAC,KAAgB,CAACD,SAAUA,EAASa,OAAO,WAC1C,gBAAKe,UAAWC,EAAY,UAC1B,iBAAKD,UAAWC,EAAY,WAC1B,iBAAKD,UAAWC,EAAa,UAC1B7B,EAAS8B,OACV,gBACEF,UAAWC,EACXL,QAAS,WACPd,GAAU,SAACD,GAET,OADAA,EAAOR,IAAS,GACT,OAAIQ,EACb,GACF,EACAqB,MAAM,qBAGV,iBAAKF,UAAWC,EAAY,WAC1B,gBAAKD,UAAWC,EAAW,UACzB,gBACEd,IAAI,sFACJG,MAAM,KACNC,OAAO,KACPY,IAAK/B,EAAS8B,WAGlB,iBAAKF,UAAWC,EAAY,WAiB1B,0BAAI,sCAAW7B,EAASgC,gBACxB,0BAAI,sCAAWhC,EAASiC,+BAI1B,SAMhB,CAEA,IAQA,GAAeC,EAAAA,EAAAA,IAAQ,MARI,SAACC,GAC1B,MAAO,CACLhC,kBAAiB,SAACiC,GAChBD,EAASE,EAAAA,GAAAA,kBAA0BD,GACrC,EAEJ,GAEA,EAAiDE,EAAAA,EAAAA,MAAKvC,G","sources":["webpack://bpservice-f/./src/style/EventMarkerContainer.module.css?09ff","components/kakaoMap/EventMarkerContainer.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrap\":\"EventMarkerContainer_wrap__vpcXk\",\"info\":\"EventMarkerContainer_info__9dhf7\",\"title\":\"EventMarkerContainer_title__-3jra\",\"close\":\"EventMarkerContainer_close__s8BXK\",\"body\":\"EventMarkerContainer_body__sA2h2\",\"desc\":\"EventMarkerContainer_desc__X0Yh3\",\"ellipsis\":\"EventMarkerContainer_ellipsis__t5frL\",\"jibun\":\"EventMarkerContainer_jibun__sT-l3\",\"img\":\"EventMarkerContainer_img__cjslV\",\"link\":\"EventMarkerContainer_link__WYp4v\"};","import { memo, useState } from \"react\";\r\nimport { MapMarker, CustomOverlayMap, useMap } from \"react-kakao-maps-sdk\";\r\nimport { connect } from \"react-redux\";\r\nimport { mapInfo } from \"../../modules/mapStore\";\r\nimport styled from \"../../style/EventMarkerContainer.module.css\";\r\nimport markerImg from \"../../style/umbrella.png\";\r\n\r\nfunction EventMarkerContainer({\r\n  position,\r\n  index,\r\n  positions,\r\n  currentMarkerInfo,\r\n  setIsClickMarker,\r\n}) {\r\n  const [isOpen, setIsOpen] = useState(Array(positions.length).fill(false));\r\n  const map = useMap();\r\n\r\n  return (\r\n    <>\r\n      <MapMarker\r\n        position={position.latlng}\r\n        image={{\r\n          src: markerImg,\r\n          size: {\r\n            width: 64,\r\n            height: 60,\r\n          },\r\n          options: {\r\n            offset: {\r\n              x: 34.6,\r\n              y: 60,\r\n            },\r\n          },\r\n        }}\r\n        onClick={(marker) => {\r\n          setIsClickMarker(true);\r\n          map.panTo(marker.getPosition());\r\n          setIsOpen((isOpen) => {\r\n            isOpen[index] = true;\r\n            return [...isOpen];\r\n          });\r\n          currentMarkerInfo(position);\r\n        }}\r\n      />\r\n      {isOpen[index] && (\r\n        <CustomOverlayMap position={position.latlng}>\r\n          <div className={styled.wrap}>\r\n            <div className={styled.info}>\r\n              <div className={styled.title}>\r\n                {position.title}\r\n                <div\r\n                  className={styled.close}\r\n                  onClick={() => {\r\n                    setIsOpen((isOpen) => {\r\n                      isOpen[index] = false;\r\n                      return [...isOpen];\r\n                    });\r\n                  }}\r\n                  title=\"닫기\"\r\n                ></div>\r\n              </div>\r\n              <div className={styled.body}>\r\n                <div className={styled.img}>\r\n                  <img\r\n                    src=\"//t1.daumcdn.net/thumb/C84x76/?fname=http://t1.daumcdn.net/cfile/2170353A51B82DE005\"\r\n                    width=\"73\"\r\n                    height=\"70\"\r\n                    alt={position.title}\r\n                  />\r\n                </div>\r\n                <div className={styled.desc}>\r\n                  {/* <div className={styled.ellipsis}>\r\n                    제주특별자치도 제주시 첨단로 242\r\n                  </div>\r\n                  <div className={(styled.jibun, styled.ellipsis)}>\r\n                    (우) 63309 (지번) 영평동 2181\r\n                  </div>\r\n                  <div>\r\n                    <a\r\n                      href=\"https://www.kakaocorp.com/main\"\r\n                      target=\"_blank\"\r\n                      className={styled.link}\r\n                      rel=\"noreferrer\"\r\n                    >\r\n                      홈페이지\r\n                    </a>\r\n                  </div> */}\r\n                  <h2>남은 우산 수 : {position.brollyCount}</h2>\r\n                  <h2>전체 우산 수 : {position.brollyTotalCount}</h2>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          ;\r\n        </CustomOverlayMap>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    currentMarkerInfo(info) {\r\n      dispatch(mapInfo.currentMarkerInfo(info));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(memo(EventMarkerContainer));\r\n"],"names":["EventMarkerContainer","position","index","positions","currentMarkerInfo","setIsClickMarker","useState","Array","length","fill","isOpen","setIsOpen","map","useMap","latlng","image","src","markerImg","size","width","height","options","offset","x","y","onClick","marker","panTo","getPosition","className","styled","title","alt","brollyCount","brollyTotalCount","connect","dispatch","info","mapInfo","memo"],"sourceRoot":""}